<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.withus.mapper.MemberMapper">

	<!-- 회원가입 -->
	<insert id="join">
		INSERT INTO member (memberId, password, name, gender, role)
		VALUES (#{memberId}, #{password}, #{name}, #{gender}, #{role})
	</insert>
	
	<!-- 회원탈퇴 -->
	<delete id="delete">
		DELETE FROM member
		WHERE memberId = #{memberId}
	</delete>
	
	<!-- 아이디로 회원찾기 -->
	<select id="findById" resultType="com.withus.domain.MemberVo">
		SELECT memberId, password, name, gender, role, regDate
		FROM member
		WHERE memberId = #{memberId}
	</select>
	
	<!-- 아이디 중복검사 -->
	<select id="idDuplicateCheck" resultType="int">
		SELECT COUNT(memberId)
		FROM member
		WHERE memberId = #{memberId}
	</select>
	
	<!-- 성별 설정 -->
	<update id="setGender">
		UPDATE member
		SET gender = #{gender}
		WHERE memberId = #{memberId}
	</update>
	
	<!-- 관심 카테고리 설정 -->
	<insert id="setFavorCate">
		INSERT INTO favorCate (favorCateId, memberId, cateId)
		VALUES (favorCateSeq.nextVal, #{memberId}, #{cateId})
	</insert>
	
	<!-- 관심 카테고리 찾기 -->
	<select id="favorCateList" resultType="com.withus.domain.FavorCateVo">
		SELECT f.favorCateId, f.memberId, f.cateId, c.cateName
		FROM favorCate f
		INNER JOIN category c ON c.cateId = f.cateId
		WHERE f.memberId = #{memberId}
	</select>
	
	<!-- 관심 지역 찾기 -->
	<select id="favorRegionList" resultType="com.withus.domain.FavorRegionVo">
		SELECT f.memberId, r.rname
		FROM favorRegion f
		INNER JOIN Region r ON f.rno = r.rno
		WHERE f.memberId = #{memberId}
	</select>
	
	<!-- 메시지 전송 -->
	<insert id="sendMessage">
		INSERT INTO message (title, content, sender, receiver)
		VALUES (#{title}, #{content}, #{sender}, #{receiver})
	</insert>
	
	<!-- 받은 쪽지함 -->
	<select id="findByReceiverId" resultType="com.withus.domain.MessageVo">
		SELECT m.messageId, m.title, m.content, m.sender, m.sendDate, mem.name
	    FROM message m
	    INNER JOIN member mem ON m.sender = mem.memberId
	    WHERE m.receiver = #{memberId}
	</select>
	
	<!-- 쪽지 상세 -->
	<select id="getMessageView" resultType="com.withus.domain.MessageVo">
		SELECT m.messageId, m.title, m.content, m.sender, m.receiver, m.sendDate, s.name AS senderName, r.name AS receiverName
		FROM message m
		INNER JOIN member s ON m.sender = s.memberId
		INNER JOIN member r ON m.receiver = r.memberId
		WHERE m.messageId = #{messageId}
	</select>
	
	<!-- 보낸 쪽지함 -->
	<select id="findBySenderId" resultType="com.withus.domain.MessageVo">
		SELECT m.messageId, m.title, m.content, m.receiver, m.sendDate, mem.name
		FROM message m
		INNER JOIN member mem ON m.receiver = mem.memberId
		WHERE m.sender = #{memberId}
	</select>
	
	<!-- 받은 쪽지 페이징 -->
	<select id="receivedListPage" resultType="com.withus.domain.MessageVo" parameterType="hashMap">
	    select messageId, title, content, sender, sendDate, name
	       from (
	           select m.messageId, m.title, m.content, m.sender, m.sendDate, mem.name,
	               row_number() over(order by m.messageId desc) as rNum
	           from message m
	           INNER JOIN member mem ON m.sender = mem.memberId
			   WHERE m.receiver = #{memberId}
	     ) mb
	    where rNum between #{rowStart} and #{rowEnd}
	        order by messageId desc
	</select>
	
	<!-- 받은 쪽지 갯수 -->
	<select id="receivedCount" resultType="int">
		SELECT count(messageId)
		FROM message
		WHERE messageId > 0 AND receiver = #{memberId} 
	</select>
	
	<!-- 보낸 쪽지 페이징 -->
	<select id="sendListPage" resultType="com.withus.domain.MessageVo" parameterType="hashMap">
	    select messageId, title, content, receiver, sendDate, name
	       from (
	           select m.messageId, m.title, m.content, m.receiver, m.sendDate, mem.name,
	               row_number() over(order by m.messageId desc) as rNum
	           from message m
	           INNER JOIN member mem ON m.receiver = mem.memberId
			   WHERE m.sender = #{memberId}
	     ) mb
	    where rNum between #{rowStart} and #{rowEnd}
	        order by messageId desc
	</select>
	
	<!-- 보낸 쪽지 갯수 -->
	<select id="sendCount" resultType="int">
		SELECT count(messageId)
		FROM message
		WHERE messageId > 0 AND sender = #{memberId} 
	</select>
	
	<!-- 회원 전체 리스트 -->
	<select id="getMemberList" resultType="com.withus.domain.MemberVo">
		SELECT memberId, name, gender, regDate
			FROM (
				SELECT memberId, name, gender, regDate,
					row_number() over(order by regDate desc) as rNum
				FROM member
				WHERE role = #{role}
			) mb
		WHERE  rNum between #{rowStart} and #{rowEnd}
			order by regDate desc
	</select>
	
	<!-- 전체 회원 수 -->
	<select id="totalMemberCount" resultType="int">
		SELECT COUNT(memberId)
		FROM member
		WHERE role = 'ROLE_USER'
	</select>
	
	<!-- 회원 신고 -->
	<insert id="reportMember">
		INSERT INTO mreport (mreportId, reporterId, reportedId, rpcontent, rpcate)
		VALUES (mreport_sequence.nextVal, #{reporterId}, #{reportedId}, #{rpcontent}, #{rpcate})
	</insert>
	
	<!-- 관심 지역 -->
	<insert id="setFavorRegion">
		INSERT INTO favorRegion (memberId, rno)
		VALUES (#{memberId}, #{rno})
	</insert>
	
	<!-- 마이페이지 질문 찾기 -->
	<select id="findMyQuestion" resultType="com.withus.domain.QuestionVo">
		SELECT q.qno, q.title, q.writer, q.regDate, q.status, m.name
		FROM question q
		INNER JOIN member m ON q.writer = m.memberId
		WHERE writer = #{memberId}
	</select>
</mapper>