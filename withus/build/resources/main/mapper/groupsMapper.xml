<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.withus.mapper.GroupsMapper">

	<!-- 그룹만들기 -->
	<insert id="groupcreate">
		INSERT INTO GROUPS (GNO, GNAME,
		GINTRO,MEMBERID,GPERSON,cateid,rno)
		VALUES ((SELECT NVL(MAX(gno), 0) +
		1 FROM
		groups),#{vo.gname},#{vo.gintro},#{memberId},#{vo.gperson},#{vo.cateid},#{vo.rno})
	</insert>

	<!-- 그룹만들기 이후 자동 가입 -->
	<insert id="createMember">
		INSERT INTO GMEMBER(gmemberid, gno, memberid)
		VALUES((SELECT NVL(MAX(GMEMBERID), 0) + 1 FROM GMEMBER), #{vo.gno},
		#{memberId})
	</insert>

	<!-- 그룹 목록 -->
	<select id="groupList" resultType="com.withus.domain.GroupsVo">
		SELECT
		g.gno,g.gname,TO_CHAR(g.gdate, 'YYYY-MM-DD')
		GDATE,g.gperson,g.glike,I.new_image_name AS newImageName
		FROM groups g
		LEFT JOIN GIMAGE I ON G.GNO = I.GNO
		order by g.gdate desc
	</select>

	<!-- 그룹 상세보기 -->
	<select id="groupview" parameterType="int"
		resultType="com.withus.domain.GroupsVo">
		SELECT g.gno,g.gname,TO_CHAR(g.gdate, 'YYYY-MM-DD') GDATE,
		g.gperson,g.glike,g.gintro, I.new_image_name AS
		newImageName,g.memberid,m.name
		FROM groups g LEFT JOIN GIMAGE I ON
		G.GNO = I.GNO
		LEFT JOIN member m ON g.memberid = m.memberid
		where g.gno
		= #{gno}
	</select>

	<!-- 그룹원 수 -->
	<select id="memberCnt" resultType="int">
		SELECT COUNT(gno)
		from gmember
		where gno = #{gno}
	</select>

	<!-- getMoreGroups 쿼리 -->
	<!-- <select id="getMoreGroups" resultType="com.withus.domain.GroupsVo"> 
		SELECT gno, gname, gdate, gperson, glike, new_image_name AS newImageName, 
		catename, rname, memberid, name, memberCnt FROM ( SELECT g.gno, g.gname, 
		TO_CHAR(g.gdate, 'YYYY-MM-DD') AS GDATE, g.gperson, g.glike, i.new_image_name, 
		c.catename, r.rname, g.memberid, m.name, ( SELECT COUNT(gm.gno)+1 FROM gmember 
		gm WHERE gm.gno = g.gno ) AS memberCnt, ROW_NUMBER() OVER (ORDER BY g.gdate 
		DESC) AS rnum FROM category c RIGHT JOIN groups g ON c.cateid = g.cateid 
		LEFT JOIN gimage i ON g.gno = i.gno LEFT JOIN region r ON g.rno = r.rno LEFT 
		JOIN member m ON g.memberid = m.memberid ) WHERE rnum BETWEEN #{startRow} 
		AND #{endRow} </select> -->
		
		
	<!-- 그룹 더보기 목록 + 검색 -->
	<select id="getMoreGroups"
		resultType="com.withus.domain.GroupsVo" parameterType="map">
	SELECT
	gno,
	gintro,
	gname,
	gdate,
	gperson,
	glike,
	new_image_name AS newImageName,
	catename,
	rname,
	memberid,
	name,
	memberCnt
	FROM (SELECT
	g.gno,
	g.gintro,
	g.gname,
	TO_CHAR(g.gdate, 'YYYY-MM-DD') AS GDATE,
	g.gperson,
	g.glike,
	i.new_image_name,
	c.catename,
	r.rname,
	g.memberid,
	m.name,
	(SELECT COUNT(gm.gno) + 1 FROM gmember gm WHERE gm.gno = g.gno) AS memberCnt,
	ROW_NUMBER() OVER (ORDER BY g.gdate DESC) AS rnum
	FROM
	category c
	RIGHT JOIN groups g ON c.cateid = g.cateid
	LEFT JOIN gimage i ON g.gno = i.gno
	LEFT JOIN region r ON g.rno = r.rno
	LEFT JOIN member m ON g.memberid = m.memberid
	<if test='searchType != null and keyword != null and keyword != ""'>
		WHERE
		<choose>
			<when test='searchType.equals("gname")'>
				g.gname LIKE '%' || #{keyword} || '%'
			</when>
			<when test='searchType.equals("gintro")'>
				g.gintro LIKE '%' || #{keyword} || '%'
			</when>
			<when test='searchType.equals("gname_gintro")'>
				g.gname LIKE '%' || #{keyword} || '%' OR g.gintro LIKE '%' || #{keyword} ||
				'%'
			</when>
			<when test='searchType.equals("memberid")'>
				m.name LIKE '%' || #{keyword} || '%'
			</when>
		</choose>
	</if>

		)		
	    WHERE rnum BETWEEN #{startRow} AND #{endRow}			
	</select>



	<!-- 그룹 삭제 -->
	<delete id="deleteGroup">
		delete from groups
		where gno = #{gno}
	</delete>

	<!-- 그룹 가입신청 -->
	<insert id="joinGroup">
		INSERT INTO GROUPJOIN(GJOINID,GNO,MEMBERID)
		VALUES((SELECT NVL(MAX(GJOINID), 0) + 1 FROM
		GROUPJOIN),#{gno},#{memberid})
	</insert>

	<!-- 가입신청 내역 -->
	<select id="joinlist" resultType="com.withus.domain.GroupJoinVo">
		SELECT
		j.gjoinid,j.gno,j.memberid,j.gpermit,j.gappdate,m.name
		FROM groupjoin j
		LEFT JOIN member m ON j.memberid = m.memberid
		where j.gno = #{gno}
		order by j.gjoinid desc
	</select>

	<!-- 가입신청 허가 -->
	<update id="joinUpdate">
		update groupjoin
		set gpermit = 1
		where gjoinid =
		#{gjoinid}
	</update>

	<!-- 가입 허가 시 그룹 가입 -->
	<insert id="joinMember">
		INSERT INTO GMEMBER(gmemberid, gno, memberid)
		VALUES((SELECT NVL(MAX(GMEMBERID), 0) + 1 FROM GMEMBER), #{gno},
		#{memberid})
	</insert>

	<!-- 그룹원 목록 -->
	<select id="memberlist"
		resultType="com.withus.domain.GroupMemberVo">
		select gm.memberid, m.name,gm.gauth,
		TO_CHAR(gm.gjoindate,
		'YYYY-MM-DD') AS gjoindate
		from gmember gm left join member m on
		gm.memberid = m.memberid
		where gm.gno = #{gno}
		order by gjoindate desc
	</select>

	<!-- 그룹원 추방 -->
	<delete id="memberBan">
		delete from gmember
		where memberid = #{memberid} AND gno = #{gno}
	</delete>
	
	<!-- 그룹원 존재 여부판단 -->
	<select id="findById" resultType="int">
	SELECT COUNT(gno)
	FROM GMEMBER
	WHERE gno = #{gno} AND memberid = #{memberId}
	</select>
	
	<!-- 그룹원 탈퇴 -->
	<delete id="memberleave">
	delete from gmember
	where memberid = #{memberid} AND gno = #{gno}
	</delete>


</mapper>












